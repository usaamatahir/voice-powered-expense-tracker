[{"D:\\voice-powered-expense-tracker\\src\\App.tsx":"1","D:\\voice-powered-expense-tracker\\src\\index.tsx":"2","D:\\voice-powered-expense-tracker\\src\\components\\IncomeExpense\\Styles.js":"3","D:\\voice-powered-expense-tracker\\src\\components\\IncomeExpense\\IncomeExpense.tsx":"4","D:\\voice-powered-expense-tracker\\src\\Style.js":"5","D:\\voice-powered-expense-tracker\\src\\components\\Main\\Style.js":"6","D:\\voice-powered-expense-tracker\\src\\components\\Main\\Main.tsx":"7","D:\\voice-powered-expense-tracker\\src\\components\\Main\\Form\\Style.js":"8","D:\\voice-powered-expense-tracker\\src\\components\\Main\\Form\\Form.tsx":"9","D:\\voice-powered-expense-tracker\\src\\components\\Main\\List\\Style.js":"10","D:\\voice-powered-expense-tracker\\src\\components\\Main\\List\\List.tsx":"11","D:\\voice-powered-expense-tracker\\src\\context\\context.tsx":"12","D:\\voice-powered-expense-tracker\\src\\context\\actions.ts":"13","D:\\voice-powered-expense-tracker\\src\\context\\reducer.ts":"14","D:\\voice-powered-expense-tracker\\src\\constants\\categories.ts":"15","D:\\voice-powered-expense-tracker\\src\\utils\\formatDate.js":"16","D:\\voice-powered-expense-tracker\\src\\components\\IncomeExpense\\useTransaction.ts":"17","D:\\voice-powered-expense-tracker\\src\\context\\initialState.js":"18","D:\\voice-powered-expense-tracker\\src\\components\\Snackbar\\Styles.js":"19","D:\\voice-powered-expense-tracker\\src\\components\\Snackbar\\InfoCard.tsx":"20","D:\\voice-powered-expense-tracker\\src\\components\\Snackbar\\Snackbar.tsx":"21"},{"size":1270,"mtime":1609792288955,"results":"22","hashOfConfig":"23"},{"size":536,"mtime":1609776441908,"results":"24","hashOfConfig":"23"},{"size":238,"mtime":1609518432133,"results":"25","hashOfConfig":"23"},{"size":744,"mtime":1609702942284,"results":"26","hashOfConfig":"23"},{"size":582,"mtime":1609519320541,"results":"27","hashOfConfig":"23"},{"size":514,"mtime":1609519996814,"results":"28","hashOfConfig":"23"},{"size":1222,"mtime":1609792363224,"results":"29","hashOfConfig":"23"},{"size":247,"mtime":1609520948533,"results":"30","hashOfConfig":"23"},{"size":5416,"mtime":1609790318980,"results":"31","hashOfConfig":"23"},{"size":416,"mtime":1609683537697,"results":"32","hashOfConfig":"23"},{"size":1778,"mtime":1609697502715,"results":"33","hashOfConfig":"23"},{"size":1219,"mtime":1609788547566,"results":"34","hashOfConfig":"23"},{"size":106,"mtime":1609687877636,"results":"35","hashOfConfig":"23"},{"size":693,"mtime":1609781264090,"results":"36","hashOfConfig":"23"},{"size":1765,"mtime":1609697445032,"results":"37","hashOfConfig":"23"},{"size":317,"mtime":1609700963925,"results":"38","hashOfConfig":"23"},{"size":1294,"mtime":1609702646936,"results":"39","hashOfConfig":"23"},{"size":88,"mtime":1609788195987,"results":"40","hashOfConfig":"23"},{"size":206,"mtime":1609789610951,"results":"41","hashOfConfig":"23"},{"size":440,"mtime":1609790966894,"results":"42","hashOfConfig":"23"},{"size":978,"mtime":1609790207826,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"nlhcuy",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"D:\\voice-powered-expense-tracker\\src\\App.tsx",["100","101"],"import React, { useEffect, useRef } from \"react\";\r\nimport IncomeExpense from \"./components/IncomeExpense/IncomeExpense\";\r\nimport {\r\n  PushToTalkButton,\r\n  PushToTalkButtonContainer,\r\n  ErrorPanel,\r\n} from \"@speechly/react-ui\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport useStyles from \"./Style\";\r\nimport Main from \"./components/Main/Main\";\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n        spacing={0}\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <Grid item sm={4} xs={12} className={classes.mobile}>\r\n          <IncomeExpense title=\"Income\" />\r\n        </Grid>\r\n        <Grid item sm={3} xs={12} className={classes.main}>\r\n          <Main />\r\n        </Grid>\r\n        <Grid item sm={4} xs={12} className={classes.desktop}>\r\n          <IncomeExpense title=\"Income\" />\r\n        </Grid>\r\n        <Grid item sm={4} xs={12} className={classes.last}>\r\n          <IncomeExpense title=\"Expense\" />\r\n        </Grid>\r\n      </Grid>\r\n      <PushToTalkButtonContainer>\r\n        <PushToTalkButton />\r\n        <ErrorPanel />\r\n      </PushToTalkButtonContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\voice-powered-expense-tracker\\src\\index.tsx",[],["102","103"],"D:\\voice-powered-expense-tracker\\src\\components\\IncomeExpense\\Styles.js",[],["104","105"],"D:\\voice-powered-expense-tracker\\src\\components\\IncomeExpense\\IncomeExpense.tsx",[],["106","107"],"D:\\voice-powered-expense-tracker\\src\\Style.js",[],["108","109"],"D:\\voice-powered-expense-tracker\\src\\components\\Main\\Style.js",[],["110","111"],"D:\\voice-powered-expense-tracker\\src\\components\\Main\\Main.tsx",[],"D:\\voice-powered-expense-tracker\\src\\components\\Main\\Form\\Style.js",[],["112","113"],"D:\\voice-powered-expense-tracker\\src\\components\\Main\\Form\\Form.tsx",["114"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport CustomizedSnackbar from \"../../Snackbar/Snackbar\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./Style\";\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport { StateProps } from \"../../../Types/Types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  expenseCategories,\r\n  incomeCategories,\r\n} from \"../../../constants/categories\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\n\r\nconst initialData: StateProps = {\r\n  amount: 0,\r\n  category: \"\",\r\n  type: \"\",\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState<StateProps>(initialData);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\r\n      return;\r\n\r\n    const transaction = {\r\n      ...formData,\r\n      amount: Number(formData.amount),\r\n      id: uuidv4(),\r\n    };\r\n    setOpen(true);\r\n    addTransaction(transaction);\r\n    setFormData(initialData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setFormData({ ...formData, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setFormData({ ...formData, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return createTransaction();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        setFormData(initialData);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case \"amount\":\r\n            setFormData({ ...formData, amount: Number(s.value) });\r\n            break;\r\n          case \"category\":\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: \"Income\", category });\r\n            } else if (\r\n              expenseCategories.map((eC) => eC.type).includes(category)\r\n            ) {\r\n              setFormData({ ...formData, type: \"Expense\", category });\r\n            }\r\n            break;\r\n          case \"date\":\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      if (\r\n        segment.isFinal &&\r\n        formData.amount &&\r\n        formData.category &&\r\n        formData.date &&\r\n        formData.type\r\n      ) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories =\r\n    formData.type === \"Expense\" ? expenseCategories : incomeCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <CustomizedSnackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment && <>{segment.words.map((w) => w.value).join(\" \")}</>}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e: any) =>\r\n              setFormData({ ...formData, type: e.target.value })\r\n            }\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={formData.category}\r\n            onChange={(e: any) =>\r\n              setFormData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n            <MenuItem value=\"business\">Business</MenuItem>\r\n            <MenuItem value=\"salary\">Salary</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          value={formData.amount}\r\n          onChange={(e: any) =>\r\n            setFormData({ ...formData, amount: e.target.value })\r\n          }\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"date\"\r\n          label=\"Date\"\r\n          value={formData.date}\r\n          onChange={(e: any) =>\r\n            setFormData({ ...formData, date: formatDate(e.target.value) })\r\n          }\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={createTransaction}\r\n        fullWidth\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","D:\\voice-powered-expense-tracker\\src\\components\\Main\\List\\Style.js",[],"D:\\voice-powered-expense-tracker\\src\\components\\Main\\List\\List.tsx",[],["115","116"],"D:\\voice-powered-expense-tracker\\src\\context\\context.tsx",[],"D:\\voice-powered-expense-tracker\\src\\context\\actions.ts",[],"D:\\voice-powered-expense-tracker\\src\\context\\reducer.ts",[],"D:\\voice-powered-expense-tracker\\src\\constants\\categories.ts",[],"D:\\voice-powered-expense-tracker\\src\\utils\\formatDate.js",["117"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) {\r\n    month = `0${month}`;\r\n  }\r\n  if (day.length < 2) {\r\n    day = `0${day}`;\r\n  }\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n",["118","119"],"D:\\voice-powered-expense-tracker\\src\\components\\IncomeExpense\\useTransaction.ts",[],"D:\\voice-powered-expense-tracker\\src\\context\\initialState.js",[],"D:\\voice-powered-expense-tracker\\src\\components\\Snackbar\\Styles.js",[],["120","121"],"D:\\voice-powered-expense-tracker\\src\\components\\Snackbar\\InfoCard.tsx",[],["122","123"],"D:\\voice-powered-expense-tracker\\src\\components\\Snackbar\\Snackbar.tsx",[],["124","125"],{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"130","line":1,"column":28,"nodeType":"128","messageId":"129","endLine":1,"endColumn":34},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"131","replacedBy":"135"},{"ruleId":"133","replacedBy":"136"},{"ruleId":"131","replacedBy":"137"},{"ruleId":"133","replacedBy":"138"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"131","replacedBy":"139"},{"ruleId":"133","replacedBy":"140"},{"ruleId":"131","replacedBy":"141"},{"ruleId":"133","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":105,"column":6,"nodeType":"145","endLine":105,"endColumn":15,"suggestions":"146"},{"ruleId":"131","replacedBy":"147"},{"ruleId":"133","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":1,"nodeType":"151","endLine":15,"endColumn":3},{"ruleId":"131","replacedBy":"147"},{"ruleId":"133","replacedBy":"148"},{"ruleId":"131","replacedBy":"152"},{"ruleId":"133","replacedBy":"153"},{"ruleId":"131","replacedBy":"141"},{"ruleId":"133","replacedBy":"142"},{"ruleId":"131","replacedBy":"154"},{"ruleId":"133","replacedBy":"155"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","no-native-reassign",["156"],"no-negated-in-lhs",["157"],["156"],["157"],["156"],["157"],["156"],["157"],["156"],["157"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["158"],["156"],["157"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["156"],["157"],["156"],["157"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"161","text":"162"},[3045,3054],"[createTransaction, formData, segment]"]